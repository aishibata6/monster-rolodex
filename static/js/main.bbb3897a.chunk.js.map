{"version":3,"sources":["components/cards/card.component.jsx","components/card-list/card-list.component.jsx","components/seach-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJhBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgDCG,G,wDAjDb,aAAe,IAAD,8BACZ,gBAkBFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QACpC,kBAAKC,QAAQC,IAAI,EAAKC,WAnBxB,EAAKA,MAAQ,CACTf,SAAW,GACXU,YAAa,IALL,E,qDAad,WAAqB,IAAD,OAClBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACT,SAAWoB,S,oBAS3C,WAIE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZY,EAAmBtB,EACtBuB,QAAQ,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAChCC,SAASf,EAAYc,kBAGxB,OACE,sBAAKhC,UAAU,MAAf,UACA,kDAEE,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAciB,KAAKjB,eACnB,cAAC,EAAD,CAAUJ,SAAUsB,W,GA5CVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bbb3897a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n); ","import React from \"react\"; \nimport { Card } from \"../cards/card.component\"; \nimport \"./card-list.styles.css\";\n\nexport const CardList = props => (\n    <div className=\"card-list\"> \n    { props.monsters.map( monster => \n          <Card key={monster.id} monster={monster} /> )}\n    </div>\n);\n        \n\n  ","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ( {placeholder, handleChange} ) => (\n    <input \n    className=\"search\" \n    type=\"search\" \n    placeholder={placeholder}\n    onChange={handleChange} />\n\n);","import React,  { Component } from \"react\"; \nimport { CardList } from \"./components/card-list/card-list.component\"; \nimport { SearchBox } from \"./components/seach-box/search-box.component\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    // sets default state \n    this.state = {\n        monsters : [],\n        searchField: \"\"\n    }; \n\n    // define \"this\" in constructor . \n    //this.handleChange = this.handleChange.bind(this); \n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n\n  handleChange = (e) => {\n    // uses \"this\" keyword defined in the constructor\n    this.setState({ searchField: e.target.value }, \n      ()=> console.log(this.state))\n  }\n\n  render() {\n    // destructure to filter out the monster array.\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters\n      .filter( monster => monster.name.toLowerCase()\n      .includes(searchField.toLowerCase())\n      )\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      {/* since setState is async function, it does not happen immediately. As a solution, set up a second argument that we pass to setState.  */}\n        <SearchBox \n        placeholder=\"Search monsters\" \n        handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}